package lab5.view;

import java.net.Socket;

import lab5.model.SetGame;
/**GameQueue
 *  Given a maximum number of players, 
 * 
 *  Author: Jeremy Tang, Edward Xie, Ben Epstein, Kyle Liu
 *  Course: CSE 132
 *  Lab:    4
 */
public class GameQueuebe {

	public byte maxPlayers;
	public byte currentPlayers;
	public SetGame model;
	public String[] clients;
	public Object lock;


	public GameQueuebe(int i){
		lock = new Object();
		clients = new String[i];
		for(byte j = 0; j<i; j++){
			clients[j] = "";
		}
		maxPlayers = (byte) i;
		currentPlayers = (byte) 0;
		model = new SetGame();
		System.out.println(i+" player queue has started");
	}

	public boolean addClient(String s){
		boolean added = false;
		for(byte i = 0; i < maxPlayers; i++){
			if(!added){
				if(clients[i] == ""){
					clients[i] = s;
					added = true;
					currentPlayers++;
				}
			}
		}
		System.out.println("cp:"+currentPlayers);
		System.out.println("mp:"+maxPlayers);
		if(currentPlayers == maxPlayers){
			for(byte i = 0; i < currentPlayers; i++){
				model.addPlayer(clients[i]);
				clients[i] = "";
			}
			currentPlayers = 0;
			model = new SetGame();
			System.out.println(maxPlayers+" player game started");
			return true;
		}
		System.out.println("someone just joined a "+maxPlayers+"game");
		return false;
	}
	public void removeClient(String s){
		for(byte i = 0; i < currentPlayers; i++){
			if(clients[i]== s){
				clients[i] = "";
			}
		}
	}
	public byte getPlayersLeft(){
		return (byte) (maxPlayers - currentPlayers);
	}
	
	public String[] getClients(){
		return clients;
	}

	public SetGame getModel(){
		return model;
	}

	public synchronized Object getLock(){
		return lock;
	}
}
